{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Create a vpc with 6 subnets",
    "Parameters": {
        "vpccidr": {
            "Description": "This is cidr range of vpc",
            "Type": "String",
            "Default": "192.168.0.0/16"
        },
        "subnetcidrs": {
            "Description": "This is cidr ranges of subnets",
            "Type": "CommaDelimitedList",
            "Default": "192.168.0.0/24,192.168.1.0/24,192.168.2.0/24,192.168.3.0/24,192.168.4.0/24,192.168.5.0/24"
        },
        "zone1": {
            "Description": "This is zone 1 for 3 subnets",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "zone2": {
            "Description": "This is zone 2 for 3 subnets",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "keypair": {
            "Description": "select keypair",
            "Type": "AWS::EC2::KeyPair::KeyName"
        }
    },
    "Mappings": {
        "RegionMap": {
            "us-east-1": {
                "ami" : "ami-08c40ec9ead489470"
            },
            "us-east-2": {
                "ami": "ami-097a2df4ac947655f"
            },
            "us-west-1": {
                "ami": "ami-02ea247e531eb3ce6"
            },
            "us-west-2": {
                "ami": "ami-017fecd1353bcc96e"
            },
            "ap-south-1": {
                "ami": "ami-062df10d14676e201"
            }
        }
    },
    "Resources": {
        "ntiervpc": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Ref": "vpccidr"
                },
                "EnableDnsHostnames": true,
                "EnableDnsSupport": true,
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "ntier"
                    }
                ]
            }
        },
        "web1subnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": {
                    "Fn::Select": [
                        0,
                        {
                            "Ref": "subnetcidrs"
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "web1"
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "AvailabilityZone": {
                    "Ref": "zone1"
                }
            }
        },
        "web2subnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": {
                    "Fn::Select": [
                        1,
                        {
                            "Ref": "subnetcidrs"
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "web2"
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "AvailabilityZone": {
                    "Ref": "zone2"
                }
            }
        },
        "app1subnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": {
                    "Fn::Select": [
                        2,
                        {
                            "Ref": "subnetcidrs"
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "app1"
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "AvailabilityZone": {
                    "Ref": "zone1"
                }
            }
        },
        "app2subnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": {
                    "Fn::Select": [
                        3,
                        {
                            "Ref": "subnetcidrs"
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "app2"
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "AvailabilityZone": {
                    "Ref": "zone2"
                }
            }
        },
        "db1subnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": {
                    "Fn::Select": [
                        4,
                        {
                            "Ref": "subnetcidrs"
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "db1"
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "AvailabilityZone": {
                    "Ref": "zone1"
                }
            }
        },
        "db2subnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": {
                    "Fn::Select": [
                        5,
                        {
                            "Ref": "subnetcidrs"
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "db2"
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "AvailabilityZone": {
                    "Ref": "zone2"
                }
            }
        },
        "websecuritygroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "This is web sg",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "ToPort": "22",
                        "FromPort": "22",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "ToPort": "80",
                        "FromPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "ToPort": "443",
                        "FromPort": "443",
                        "CidrIp": "0.0.0.0/0"
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "websg"
                    }
                ]
            }
        },
        "appsecuritygroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "This is app security group",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "ToPort": "22",
                        "FromPort": "22",
                        "CidrIp": {
                            "Ref": "vpccidr"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "ToPort": "8080",
                        "FromPort": "8080",
                        "CidrIp": {
                            "Ref": "vpccidr"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "appsg"
                    }
                ]
            }
        },
        "dbsecuritygroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "This is for mysql",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "ToPort": "3306",
                        "FromPort": "3306",
                        "CidrIp": {
                            "Ref": "vpccidr"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "dbsg"
                    }
                ]
            }
        },
        "ntierigw": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "ntierigw"
                    }
                ]
            }
        },
        "AttachGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "InternetGatewayId": {
                    "Ref": "ntierigw"
                }
            }
        },
        "publicrt": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "publicrt"
                    }
                ]
            }
        },
        "publicrtigw": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "publicrt"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "ntierigw"
                }
            }
        },
        "privatert": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "privatert"
                    }
                ]
            }
        },
        "publicweb1assc": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "web1subnet"
                },
                "RouteTableId": {
                    "Ref": "publicrt"
                }
            }
        },
        "publicweb2assc": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "web2subnet"
                },
                "RouteTableId": {
                    "Ref": "publicrt"
                }
            }
        },
        "privateapp1assc": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "app1subnet"
                },
                "RouteTableId": {
                    "Ref": "privatert"
                }
            }
        },
        "privateapp2assc": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "app2subnet"
                },
                "RouteTableId": {
                    "Ref": "privatert"
                }
            }
        },
        "privatedb1assc": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "db1subnet"
                },
                "RouteTableId": {
                    "Ref": "privatert"
                }
            }
        },
        "privatedb2assc": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "db2subnet"
                },
                "RouteTableId": {
                    "Ref": "privatert"
                }
            }
        },
        "mysqlrdsdbsubnetgroup": {
            "Type": "AWS::RDS::DBSubnetGroup",
            "Properties": {
                "DBSubnetGroupDescription": "from cloudformation",
                "SubnetIds": [
                    {
                        "Ref": "db1subnet"
                    },
                    {
                        "Ref": "db2subnet"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "dbsubnetfromcf"
                    }
                ]
            }
        },
        "mysqlrdsbdinstance": {
            "Type": "AWS::RDS::DBInstance",
            "Properties": {
                "AllocatedStorage": "20",
                "DBInstanceClass": "db.t2.micro",
                "AllowMajorVersionUpgrade": "false",
                "AutoMinorVersionUpgrade": "false",
                "BackupRetentionPeriod": 0,
                "DBInstanceIdentifier": "qtrdsfromcfoct22",
                "DBName": "samplefromcf",
                "DBSubnetGroupName": {
                    "Ref": "mysqlrdsdbsubnetgroup"
                },
                "Engine": "MySQL",
                "EngineVersion": "8.0.28",
                "MasterUsername": "root",
                "MasterUserPassword": "rootroot",
                "MultiAZ": "false",
                "Port": "3306",
                "PubliclyAccessible": "true",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "myrdsdb"
                    }
                ],
                "VPCSecurityGroups": [
                    {
                        "Ref": "dbsecuritygroup"
                    }
                ]
            }
        },
        "webec2": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "KeyName": {
                    "Ref": "keypair"
                },
                "ImageId": {
                "Fn::FindInMap": [
                    "RegionMap",
                    { "Ref": "AWS::Region" },
                    "ami"
                ]
                },
                "InstanceType": "t2.micro",
                "Monitoring": "false",
                "NetworkInterfaces": [
                    {
                        "AssociatePublicIpAddress": true,
                        "GroupSet": [
                            {
                                "Ref": "websecuritygroup"
                            }
                        ],
                        "SubnetId": {
                            "Ref": "web1subnet"
                        },
                        "DeviceIndex": 0
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "web"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "\n",
                            [
                                "#!/bin/bash",
                                "sudo apt update",
                                "sudo apt install apache2 -y"
                            ]
                        ]
                    }
                }
            }
        }
    },
    "Outputs": {
        "weburl": {
            "Value": {
                "Fn::GetAtt": [
                    "webec2",
                    "PublicIp"
                ]
            }
        }
    }
}